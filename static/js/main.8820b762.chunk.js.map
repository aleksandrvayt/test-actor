{"version":3,"sources":["actors.jpg","components/Navbar.js","components/Form.js","components/Hero.js","components/About.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","Form","onCreate","useState","value","setValue","onSubmit","event","preventDefault","trim","type","placeholder","onChange","e","target","Hero","actors","removeActors","name","onClick","About","setActors","loading","setLoading","filter","actor","useEffect","fetch","then","response","json","parse","results","concat","id","Date","now","length","map","key","Home","src","alt","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,oC,2JCG5B,SAASC,IACpB,OACI,yBAAKC,UAAU,wBACX,sFACA,kBAAC,IAAD,CACAC,GAAG,IACHD,UAAU,OAFV,8CAMA,kBAAC,IAAD,CACAC,GAAG,WADH,yC,WCXCC,EAAO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACVC,mBAAS,IADC,mBAC5BC,EAD4B,KACtBC,EADsB,KAYlC,OACI,0BAAMC,SAVN,SAAuBC,GACrBA,EAAMC,iBAEFJ,EAAMK,SACRP,EAASE,GACTC,EAAS,MAKkBN,UAAU,gBAErC,yBAAKA,UAAU,kBACX,2BACAW,KAAK,OACLX,UAAU,eACVY,YAAY,qGACZP,MAAOA,EACPQ,SAAU,SAAAC,GAAC,OAAIR,EAASQ,EAAEC,OAAOV,UAEjC,4BAAQM,KAAK,SAASX,UAAU,uBAAhC,4FCvBD,SAASgB,EAAT,GAAsC,IAAvBC,EAAsB,EAAtBA,OAAOC,EAAe,EAAfA,aAEjC,OACI,yBAAKlB,UAAU,+CACX,wBAAIA,UAAU,sDACbiB,EAAOE,MAER,4BAAQR,KAAK,SAASX,UAAU,qBAAqBoB,QAAS,kBAAMF,EAAaD,EAAOE,QAAxF,MCLG,SAASE,IAAS,IAAD,EAEIjB,mBAAS,IAFb,mBAEjBa,EAFiB,KAETK,EAFS,OAGMlB,oBAAS,GAHf,mBAGjBmB,EAHiB,KAGRC,EAHQ,KAgBxB,SAASN,EAAaC,GACpBG,EAAUL,EAAOQ,QAAO,SAAAC,GAAK,OAAIA,EAAMP,OAASA,MAalD,OAzBAQ,qBAAU,WAERC,MAAM,gCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIA,EAAMC,WACpBJ,MAAK,SAAAZ,GACFK,EAAUL,GACVO,GAAW,QAEhB,IAkBD,6BACI,kBAAC,EAAD,CAAMrB,SAbZ,SAAmBgB,GACjBG,EACEL,EAAOiB,OAAO,CACZ,CACEf,OACAgB,GAAIC,KAAKC,aASVd,GAAW,mFACXN,EAAOqB,OAENrB,EAAOsB,KAAI,SAAAb,GACX,OAAO,kBAACV,EAAD,CAAMC,OAAQS,EAAOR,aAAcA,EAAcsB,IAAKd,EAAMP,UAC7DI,EAAU,KAChB,8F,qBCzCD,SAASkB,IACpB,OACI,6BACI,yBAAKC,IAAKzB,IAAQjB,UAAU,QAAQ2C,IAAI,YCerCC,MAdf,WACE,OACM,kBAAC,IAAD,KACE,yBAAK5C,UAAU,OACb,kBAACD,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8C,KAAM,IAAKC,OAAK,EAACC,UAAWN,IACnC,kBAAC,IAAD,CAAOI,KAAM,UAAWE,UAAW1B,QCF7B2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9B,MAAK,SAAA+B,GACjCA,EAAaC,kB","file":"static/js/main.8820b762.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/actors.62b8fa7b.jpg\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <div className='bg-warning navHeight'>\r\n            <h1>Навигация</h1>\r\n            <Link \r\n            to='/'\r\n            className=\"m-2\"\r\n            >\r\n                Главная\r\n            </Link>\r\n            <Link \r\n            to='/actors'            \r\n            >\r\n                Актеры\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport const Form = ({ onCreate }) => {\r\n    const[value,setValue] = useState('')\r\n  \r\n        function submitHandler(event) {\r\n          event.preventDefault()\r\n      \r\n          if (value.trim()) {\r\n            onCreate(value)\r\n            setValue('')\r\n          }\r\n        }\r\n    \r\n    return (\r\n        <form onSubmit={submitHandler} className=\"widthContent\">\r\n            \r\n            <div className=\"form-group m-3\">\r\n                <input \r\n                type=\"text\" \r\n                className=\"form-control\"\r\n                placeholder=\"Введите имя актера\"\r\n                value={value}\r\n                onChange={e => setValue(e.target.value)}\r\n                />\r\n                <button type=\"submit\" className=\"m-1 btn btn-success\">Добавить актера</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Hero({actors,removeActors}) {\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-between widthContent\">\r\n            <h2 className=\"border border-secondary rounded pl-3 pr-3 bg-light\">\r\n            {actors.name}\r\n            </h2>\r\n            <button type=\"submit\" className=\"m-1 btn btn-danger\" onClick={() => removeActors(actors.name)}>X</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState,useEffect} from 'react'\r\nimport { Form } from './Form'\r\nimport Hero from './Hero'\r\n\r\nexport default function About() {\r\n\r\n        const [actors, setActors] = useState([])\r\n        const [loading, setLoading] = useState(true)\r\n      \r\n        useEffect(() => {\r\n          debugger\r\n          fetch('https://swapi.co/api/people/')\r\n            .then(response => response.json())\r\n            .then(parse => parse.results)\r\n            .then(actors => {  \r\n                setActors(actors)\r\n                setLoading(false)\r\n            })\r\n        }, [])\r\n       \r\n        function removeActors(name) {\r\n          setActors(actors.filter(actor => actor.name !== name))\r\n        }\r\n      \r\n        function addActors(name) {\r\n          setActors(\r\n            actors.concat([\r\n              {\r\n                name,\r\n                id: Date.now()\r\n              }\r\n            ])\r\n          )\r\n        }\r\n        return (\r\n        \r\n          <div>\r\n              <Form onCreate={addActors}/>\r\n              {loading && <h2>Загрузка...</h2>}\r\n              {actors.length ? (\r\n                \r\n                actors.map(actor => {\r\n                return <Hero actors={actor} removeActors={removeActors} key={actor.name}/>\r\n                })) : loading ? null : (\r\n                <p>Нет актеров!</p>\r\n              )}\r\n           </div> \r\n        )\r\n      }\r\n","import React from 'react'\r\nimport actors from '../actors.jpg'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <img src={actors} className=\"image\" alt=\"actors\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\nimport Home from './components/Home';\n\n\nfunction App() {\n  return (\n        <BrowserRouter>\n          <div className=\"app\">\n            <Navbar/>\n            <Switch>\n              <Route path={'/'} exact component={Home}/>\n              <Route path={'/actors'} component={About}/>\n            </Switch>\n          </div>\n        </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}